#!/bin/bash

help()
{
    cat <<EOF
usage: $0 --reclass <original class> <replacement class> <segments CSV file>

Modify a segments CSV dump file that was generated by synspy-viewer
according to options.  The file will be read and modified in place
or left unmodified in the event of errors.

Options:

  --help  
           Print this help message.

  --reclass
           Rewrite original class value to replacement class value.

Class Values:

  '' : '0' or 'default'
  '1': 'nosyn-noclick'
  '3': 'syn-noclick'
  '5': 'nosyn-click' or 'nosyn'
  '7': 'syn-click'' or 'syn'

The left-hand values in the list above, e.g. '', '1', or '3', are used
in the CSV file in the "override" column. The alternate spellings
after the colon are also accepted aliases in the command-line options
<original> and <replacement> in this utility.

EOF
}

TMP=$(mktemp synspy-reclassify-tmp.XXXXXXX)

cleanup()
{
    rm -f $TMP
}

error()
{
    cat >&2 <<EOF
$0: $@
Aborting.

See output of '$0 --help' for documentation.
EOF
    exit 1
}

trap cleanup 0

# NOTE: CSV has extra carriage-return whitespace at end of line so need to handle that in regexps below!

validate()
{
    [[ -r "$1" ]] || error File "$1" not readable
    line=$(head -1 "$1" | sed -e "s/[[:space:]]\$//")
    [[ "$line" =~ "Z,Y,X,raw core,raw hollow,DoG core,DoG hollow,override" ]] || error File "$1" missing expected CSV header matching output of synspy-viewer
    if tail -n +2 "$1" | grep -v '^\([-.0-9]*,\)\{7\}\(\|1\|3\|5\|7\)[[:space:]]$'
    then
	error File "$1" has lines not matching expected CSV format
    fi
}

normalize()
{
    if [[ -z "$1" ]]
    then
	return
    else
	case "$1" in
	    0|default)
		;;
	    1|nosyn-noclick)
		printf "1\n"
		;;
	    3|syn-noclick)
		printf "3\n"
		;;
	    5|nosyn-click|nosyn)
		printf "5\n"
		;;
	    7|syn-click|syn)
		printf "7\n"
		;;
	    *)
		printf "error\n"
		;;
	esac
    fi
}

replace()
{
    original=$(normalize "$1")
    replacement=$(normalize "$2")

    [[ "$original" != "error" ]] || error Replacement original "$1" is not a valid class	   
    [[ "$replacement" != "error" ]] || error Replacement "$2" is not a valid class
    validate "$3"

    sed -e "s/^\(\([-.0-9]*,\)\{7\}\)\(${original}\)\([[:space:]]*\)\$/\1${replacement}\4/" < "$3" > $TMP
    validate "$TMP"
    mv "$TMP" "$3"
}

if [[ "$1" = "--reclass" ]] && [[ $# -eq 4 ]]
then
    shift
    replace "$@"
else
    help
    exit 1
fi
